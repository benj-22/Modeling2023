mdl 1.6;

import ::adobe::annotations::*;
import ::adobe::materials::*;
import ::anno::*;
import ::base::*;
import ::state::*;
import ::tex::gamma_mode;

export material LAMBERT3SG(*)
 = ::adobe::materials::standard(
     specular_ior :1.50000000f,
     coat_ior :1.60000002f,
     scatter_distance :0.50000000f,
     base_color: ::base::file_texture(
          texture: texture_2d("LAMBERT3SG_base_color.png", ::tex::gamma_srgb),
          mono_source: ::base::mono_average,
          uvw: ::base::transform_coordinate(::base::rotation_translation_scale())).tint,
     roughness: ::base::file_texture(
          texture: texture_2d("LAMBERT3SG_roughness.png", ::tex::gamma_linear),
          mono_source: ::base::mono_average,
          uvw: ::base::transform_coordinate(::base::rotation_translation_scale())).mono,
     metallic: ::base::file_texture(
          texture: texture_2d("LAMBERT3SG_metallic.png", ::tex::gamma_linear),
          mono_source: ::base::mono_average,
          uvw: ::base::transform_coordinate(::base::rotation_translation_scale())).mono,
     normal: ::base::tangent_space_normal_texture(
          texture: texture_2d("LAMBERT3SG_normal.png", ::tex::gamma_linear),
          flip_tangent_v: false,
          uvw: ::base::transform_coordinate(::base::rotation_translation_scale()),
          offset: 1.f),
     ambient_occlusion: ::base::file_texture(
          texture: texture_2d("LAMBERT3SG_ambient_occlusion.png", ::tex::gamma_linear),
          mono_source: ::base::mono_average,
          uvw: ::base::transform_coordinate(::base::rotation_translation_scale())).mono,
     combine_normal_and_height: false
);

export material BLINN1SG(*)
 = ::adobe::materials::standard(
     specular_ior :1.50000000f,
     coat_ior :1.60000002f,
     scatter_distance :0.50000000f,
     base_color: ::base::file_texture(
          texture: texture_2d("BLINN1SG_base_color.png", ::tex::gamma_srgb),
          mono_source: ::base::mono_average,
          uvw: ::base::transform_coordinate(::base::rotation_translation_scale())).tint,
     roughness: ::base::file_texture(
          texture: texture_2d("BLINN1SG_roughness.png", ::tex::gamma_linear),
          mono_source: ::base::mono_average,
          uvw: ::base::transform_coordinate(::base::rotation_translation_scale())).mono,
     metallic: ::base::file_texture(
          texture: texture_2d("BLINN1SG_metallic.png", ::tex::gamma_linear),
          mono_source: ::base::mono_average,
          uvw: ::base::transform_coordinate(::base::rotation_translation_scale())).mono,
     normal: ::base::tangent_space_normal_texture(
          texture: texture_2d("BLINN1SG_normal.png", ::tex::gamma_linear),
          flip_tangent_v: false,
          uvw: ::base::transform_coordinate(::base::rotation_translation_scale()),
          offset: 1.f),
     ambient_occlusion: ::base::file_texture(
          texture: texture_2d("BLINN1SG_ambient_occlusion.png", ::tex::gamma_linear),
          mono_source: ::base::mono_average,
          uvw: ::base::transform_coordinate(::base::rotation_translation_scale())).mono,
     combine_normal_and_height: false
);

export material INITIALSHADINGGROUP(*)
 = ::adobe::materials::standard(
     specular_ior :1.50000000f,
     coat_ior :1.60000002f,
     scatter_distance :0.50000000f,
     base_color: ::base::file_texture(
          texture: texture_2d("INITIALSHADINGGROUP_base_color.png", ::tex::gamma_srgb),
          mono_source: ::base::mono_average,
          uvw: ::base::transform_coordinate(::base::rotation_translation_scale())).tint,
     roughness: ::base::file_texture(
          texture: texture_2d("INITIALSHADINGGROUP_roughness.png", ::tex::gamma_linear),
          mono_source: ::base::mono_average,
          uvw: ::base::transform_coordinate(::base::rotation_translation_scale())).mono,
     metallic: ::base::file_texture(
          texture: texture_2d("INITIALSHADINGGROUP_metallic.png", ::tex::gamma_linear),
          mono_source: ::base::mono_average,
          uvw: ::base::transform_coordinate(::base::rotation_translation_scale())).mono,
     normal: ::base::tangent_space_normal_texture(
          texture: texture_2d("INITIALSHADINGGROUP_normal.png", ::tex::gamma_linear),
          flip_tangent_v: false,
          uvw: ::base::transform_coordinate(::base::rotation_translation_scale()),
          offset: 1.f),
     ambient_occlusion: ::base::file_texture(
          texture: texture_2d("INITIALSHADINGGROUP_ambient_occlusion.png", ::tex::gamma_linear),
          mono_source: ::base::mono_average,
          uvw: ::base::transform_coordinate(::base::rotation_translation_scale())).mono,
     combine_normal_and_height: false
);

export material PHONG1SG(*)
 = ::adobe::materials::standard(
     specular_ior :1.50000000f,
     coat_ior :1.60000002f,
     scatter_distance :0.50000000f,
     base_color: ::base::file_texture(
          texture: texture_2d("PHONG1SG_base_color.png", ::tex::gamma_srgb),
          mono_source: ::base::mono_average,
          uvw: ::base::transform_coordinate(::base::rotation_translation_scale())).tint,
     roughness: ::base::file_texture(
          texture: texture_2d("PHONG1SG_roughness.png", ::tex::gamma_linear),
          mono_source: ::base::mono_average,
          uvw: ::base::transform_coordinate(::base::rotation_translation_scale())).mono,
     metallic: ::base::file_texture(
          texture: texture_2d("PHONG1SG_metallic.png", ::tex::gamma_linear),
          mono_source: ::base::mono_average,
          uvw: ::base::transform_coordinate(::base::rotation_translation_scale())).mono,
     normal: ::base::tangent_space_normal_texture(
          texture: texture_2d("PHONG1SG_normal.png", ::tex::gamma_linear),
          flip_tangent_v: false,
          uvw: ::base::transform_coordinate(::base::rotation_translation_scale()),
          offset: 1.f),
     ambient_occlusion: ::base::file_texture(
          texture: texture_2d("PHONG1SG_ambient_occlusion.png", ::tex::gamma_linear),
          mono_source: ::base::mono_average,
          uvw: ::base::transform_coordinate(::base::rotation_translation_scale())).mono,
     combine_normal_and_height: false
);

